function [c] = uitoolfactory(h,id)
% This function is undocumented and will change in a future release

%UITOOLFACTORY Creates built-in toolbar components
%   uitoolfactory
%       With no arguments, displays registered toolbar
%       components to the command window.
%
%   [C] = uitoolfactory(H,'GroupName.ComponentName')
%       H is the parent toolbar handle.
%       'GroupName' is the name of the toolbar group
%       'ComponentName' is the name of the toolbar component
%       C is the toolbar component
%
%   [C] = uitoolfactory(H,'GroupName')
%       Specifying a 'GroupName' without a 'ComponentName' will create
%       all the components, C, registered in that group.
%a
%   NOTE:
%       C will return empty if the component is no longer supported as a
%       built-in component.
%
%   [INFO] = uitoolfactory('getinfo')
%       Returns a struct containing information on all registered tools.
%
%   Example:
%       % Create a figure with a simple toolbar
%       FIG = figure('toolbar','none');
%       H = uitoolbar('parent',FIG);
%       C = uitoolfactory(H,'Standard.EditPlot');
%       C = uitoolfactory(H,'Exploration.ZoomIn');
%       set(C,'Separator','on');
%       C = uitoolfactory(H,'Exploration.ZoomOut');
%       C = uitoolfactory(H,'Exploration.Pan');
%
%   See also UIGETTOOL.

%   Copyright 1984-2012 The MathWorks, Inc.

%%% NOTE:
% This function is MLOCKed. Unlock the file if you make edits to it for
% the changes to register. Prior to running the file execute the code:
% munlock ('uitoolfactory');

if nargin==0
    % Pretty print output
    info = localGetToolbarComponentInfo;
    localPrettyPrint(info);
    
    % info = uitoolfactory('getinfo')
elseif nargin==1 && nargout==1
    info = localGetToolbarComponentInfo;
    % Convert cell of structs to structure
    for n = 1:length(info)
        c(n) = info{n};
    end
    
elseif nargin==2
    c = localMainCreate(h,id);
end

%---------------------------------------------------%
function [hComponent] = localMainCreate(h,fullid)
% Creates one or more uitoolbar components

hComponent = [];

% Get group and name from full ID
[idgroup,idname] = strtok(fullid,'.');
if ~isempty(idname)
    idname = idname(2:end);
end

% p must be a toolbar
if strcmpi(get(h,'Type'),'uitoolbar')
    hToolbar = h;
else
    error(message('uitools:uitoolfactory:InvalidHandle'));
end

% Get full listing of registered components
dat = localGetToolbarComponentInfo;


% No name specified, so load group of toolbar components
if isempty(idname)
    
    % Cycle through each item and add appropriately
    for n = 1:length(dat);
        info = dat{n};
        if strcmp(info.group,idgroup)
            hComponent(end+1) = localCreateToolbarComponent(hToolbar,info);
        end
    end
    
    % Load individual toolbar components
else
    % Cycle through each item
    for n = 1:length(dat);
        info = dat{n};
        if strcmp(info.group,idgroup) && strcmp(info.name,idname);
            hComponent = localCreateToolbarComponent(hToolbar,info);
            break;
        end
    end
end

%---------------------------------------------------%
function [hComponent] = localCreateToolbarComponent(hToolbar,info)
% Creates individual components (i.e. uitoggletool, uipushtool, etc.)

props = info.properties;

% Specify PARENT property
props.parent = hToolbar;

% Create toolbar component
hComponent = feval(info.constructor,props);

%---------------------------------------------------%
function localPrettyPrint(uidata)
% Pretty prints toolbar data to command window
% in a similar manner as the PATH command.

% Header
disp(sprintf('\n\t\tTOOLBAR ITEMS\n'))

info = {};
for n = 1:length(uidata)
    info{n} = [uidata{n}.group,'.',uidata{n}.name];
end

% Display items
ch= strvcat(info);
tabspace = ones(size(ch,1),1);
tabspace(:) = sprintf('\t');
s = [tabspace, ch];
disp(s)

% Footer
disp(sprintf('\n'))

%---------------------------------------------------%
function [toolbarData] = localGetToolbarComponentInfo
% Loads all toolbar data

% Keep persistent toolbar data inside this function
mlock; % Prevents Persistent data (and function) from being cleared.
persistent uidata
if isempty(uidata)
    
    % Notes:
    % Create tag based on group & name. It is better to keep this tag unique as
    % we do know. It is used to improve the performance of creating the icon
    % from CData in Java Figures. It is used as the key to search for a match
    % in a table with Java icons created for component generated by this
    % uitoolfactory.
    %
    % % Properties common to all uitool components:
    % % - 'HandleVisibility': 'off'
    % % - 'Serializable'    : 'off'
    %%% NOTE:
    % This function is MLOCKed. Unlock the file if you make edits to it for
    % the changes to register. Prior to running the file execute the code:
    % munlock ('uitoolfactory');
    
    uidata = {};
    
    %%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%% BEGIN DEFINING DATA %%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%
    % Open the TooltipString Catalog:
    toolTipStrings = matlab.internal.Catalog('MATLAB:uistring:figuretoolbar');
    % Open the Label Catalog:
    labelStrings = matlab.internal.Catalog('MATLAB:uistring:uitoolfactory');
    
    % STANDARD TOOLS ------------------------------------------%
    % New Figure
    info = [];
    info.name = 'NewFigure';
    info.group = 'Standard';
    info.constructor = 'uipushtool';
    info.properties.ClickedCallback = 'filemenufcn(gcbf,''FileNew'')';
    info.properties.ToolTipString = toolTipStrings.getString('TooltipString_Standard_NewFigure');
    info.properties.Tag = [info.group,'.',info.name];
    info.properties.HandleVisibility = 'off';
    info.properties.Serializable = 'off';
    info.icon = 'file_new.png';
    info.properties.CData = localLoadIconCData(info.icon);
    info.label = labelStrings.getString('Label_Standard_NewFigure');
    info.readyForGUIDE = true;
    
    uidata{end+1} = info;
    
    % Open File
    info = [];
    info.name = 'FileOpen';
    info.group = 'Standard';
    info.constructor = 'uipushtool';
    info.properties.ClickedCallback = 'filemenufcn(gcbf,''FileOpen'')';
    info.properties.ToolTipString = toolTipStrings.getString('TooltipString_Standard_FileOpen');
    info.properties.Tag = [info.group,'.',info.name];
    info.properties.HandleVisibility = 'off';
    info.properties.Serializable = 'off';
    info.properties.BusyAction = 'cancel';
    info.properties.Interruptible = 'off';
    info.icon = 'file_open.png';
    info.properties.CData = localLoadIconCData(info.icon);
    info.label = labelStrings.getString('Label_Standard_FileOpen');
    info.readyForGUIDE = true;
    uidata{end+1} = info;
    
    % Save Figure
    info = [];
    info.name = 'SaveFigure';
    info.group = 'Standard';
    info.constructor = 'uipushtool';
    info.properties.ClickedCallback = 'filemenufcn(gcbf,''FileSave'')';
    info.properties.ToolTipString = toolTipStrings.getString('TooltipString_Standard_SaveFigure');
    info.properties.Tag = [info.group,'.',info.name];
    info.properties.HandleVisibility = 'off';
    info.properties.Serializable = 'off';
    info.properties.BusyAction = 'cancel';
    info.properties.Interruptible = 'off';
    info.icon = 'file_save.png';
    info.properties.CData = localLoadIconCData(info.icon);
    info.label = labelStrings.getString('Label_Standard_SaveFigure');
    info.readyForGUIDE = true;
    uidata{end+1} = info;
    
    % Print
    info = [];
    info.name = 'PrintFigure';
    info.group = 'Standard';
    info.constructor = 'uipushtool';
    info.properties.ClickedCallback = 'printdlg(gcbf)';
    info.properties.ToolTipString = toolTipStrings.getString('TooltipString_Standard_PrintFigure');
    info.properties.Tag = [info.group,'.',info.name];
    info.properties.HandleVisibility = 'off';
    info.properties.Serializable = 'off';
    info.properties.BusyAction = 'cancel';
    info.properties.Interruptible = 'off';
    info.icon = 'file_print.png';
    info.properties.CData = localLoadIconCData(info.icon);
    info.label = labelStrings.getString('Label_Standard_PrintFigure');
    info.readyForGUIDE = true;
    uidata{end+1} = info;
    
    % Plot Edit
    info = [];
    info.name = 'EditPlot';
    info.group = 'Standard';
    info.constructor = 'uitoggletool';
    info.properties.ClickedCallback = 'plotedit(gcbf,''toggle'')';
    info.properties.ToolTipString =  toolTipStrings.getString('TooltipString_Standard_EditPlot');
    info.properties.Tag = [info.group,'.',info.name];
    info.properties.HandleVisibility = 'off';
    info.properties.Serializable = 'off';
    info.icon = 'pointer';
    info.properties.CData = localLoadIconCData(info.icon);
    info.label = labelStrings.getString('Label_Standard_EditPlot');
    info.readyForGUIDE = false;
    uidata{end+1} = info;
    
    % EXPLORE TOOLS ------------------------------------------%
    
    % Zoom In
    info = [];
    info.name = 'ZoomIn';
    info.group = 'Exploration';
    info.constructor = 'uitoggletool';
    info.properties.ClickedCallback = 'putdowntext(''zoomin'',gcbo)';
    %info.properties.ClickedCallback = 'zoom inmode';
    info.properties.ToolTipString = toolTipStrings.getString('TooltipString_Exploration_ZoomIn');
    info.properties.Tag = [info.group,'.',info.name];
    info.properties.HandleVisibility = 'off';
    info.properties.Serializable = 'off';
    info.icon = 'tool_zoom_in.png';
    info.properties.CData = localLoadIconCData(info.icon);
    info.label = labelStrings.getString('Label_Exploration_ZoomIn');
    info.readyForGUIDE = true;
    uidata{end+1} = info;
    
    % Zoom Out
    info = [];
    info.name = 'ZoomOut';
    info.group = 'Exploration';
    info.constructor = 'uitoggletool';
    info.properties.ClickedCallback = 'putdowntext(''zoomout'',gcbo)';
    %info.properties.ClickedCallback = 'zoom outmode';
    info.properties.ToolTipString = toolTipStrings.getString('TooltipString_Exploration_ZoomOut');
    info.properties.Tag = [info.group,'.',info.name];
    info.properties.HandleVisibility = 'off';
    info.properties.Serializable = 'off';
    info.icon = 'tool_zoom_out.png';
    info.properties.CData = localLoadIconCData(info.icon);
    info.label = labelStrings.getString('Label_Exploration_ZoomOut');
    info.readyForGUIDE = true;
    uidata{end+1} = info;
    
    % Zoom X
    info = [];
    info.name = 'ZoomX';
    info.group = 'Exploration';
    info.constructor = 'uitoggletool';
    info.properties.ClickedCallback = 'putdowntext(''zoomx'',gcbo)';
    info.properties.ToolTipString = toolTipStrings.getString('TooltipString_Exploration_ZoomX');
    info.properties.Tag = [info.group,'.',info.name];
    info.properties.HandleVisibility = 'off';
    info.properties.Serializable = 'off';
    info.icon = 'zoomx.mat';
    info.properties.CData = localLoadIconCData(info.icon);
    info.label = labelStrings.getString('Label_Exploration_ZoomX');
    info.readyForGUIDE = false;
    uidata{end+1} = info;
    
    % Zoom Y
    info = [];
    info.name = 'ZoomY';
    info.group = 'Exploration';
    info.constructor = 'uitoggletool';
    info.properties.ClickedCallback = 'putdowntext(''zoomy'',gcbo)';
    info.properties.ToolTipString = toolTipStrings.getString('TooltipString_Exploration_ZoomY');
    info.properties.Tag = [info.group,'.',info.name];
    info.properties.HandleVisibility = 'off';
    info.properties.Serializable = 'off';
    info.icon = 'zoomy.mat';
    info.properties.CData = localLoadIconCData(info.icon);
    info.label = labelStrings.getString('Label_Exploration_ZoomY');
    info.readyForGUIDE = false;
    uidata{end+1} = info;
    
    % Pan
    info = [];
    info.name = 'Pan';
    info.group = 'Exploration';
    info.constructor = 'uitoggletool';
    info.properties.ClickedCallback = 'putdowntext(''pan'',gcbo)';
    %info.properties.ClickedCallback = 'pan on';
    info.properties.ToolTipString = toolTipStrings.getString('TooltipString_Exploration_Pan');
    info.properties.Tag = [info.group,'.',info.name];
    info.properties.HandleVisibility = 'off';
    info.properties.Serializable = 'off';
    info.icon = 'tool_hand.png';
    info.properties.CData = localLoadIconCData(info.icon);
    info.label = labelStrings.getString('Label_Exploration_Pan');
    info.readyForGUIDE = true;
    uidata{end+1} = info;
    
    % Rotate
    info = [];
    info.name = 'Rotate';
    info.group = 'Exploration';
    info.constructor = 'uitoggletool';
    info.properties.ClickedCallback = 'putdowntext(''rotate3d'',gcbo)';
    %info.properties.ClickedCallback = 'rotate3d on';
    info.properties.ToolTipString = toolTipStrings.getString('TooltipString_Exploration_Rotate');
    info.properties.Tag = [info.group,'.',info.name];
    info.properties.HandleVisibility = 'off';
    info.properties.Serializable = 'off';
    info.icon = 'tool_rotate_3d.png';
    info.properties.CData = localLoadIconCData(info.icon);
    info.label = labelStrings.getString('Label_Exploration_Rotate');
    info.readyForGUIDE = true;
    uidata{end+1} = info;
    
    % Data Cursor
    info = [];
    info.name = 'DataCursor';
    info.group = 'Exploration';
    info.constructor = 'uitoggletool';
    info.properties.ClickedCallback = 'putdowntext(''datatip'',gcbo)';
    info.properties.ToolTipString = toolTipStrings.getString('TooltipString_Exploration_DataCursor');
    info.properties.Tag = [info.group,'.',info.name];
    info.properties.HandleVisibility = 'off';
    info.properties.Serializable = 'off';
    info.icon = 'tool_data_cursor.png';
    info.properties.CData = localLoadIconCData(info.icon);
    info.label = labelStrings.getString('Label_Exploration_DataCursor');
    info.readyForGUIDE = true;
    uidata{end+1} = info;
    
    % Brush
    info = [];
    info.name = 'Brushing';
    info.group = 'Exploration';
    info.constructor = 'uitogglesplittool';
    info.properties.ToolTipString = toolTipStrings.getString('TooltipString_Exploration_Brushing');
    info.properties.Callback = @datamanager.brushHGCallback;
    info.properties.ClickedCallback = 'putdowntext(''brush'',gcbo)';
    info.properties.createFcn = @datamanager.createBrushToolBtn;
    info.properties.Tag = [info.group,'.',info.name];
    info.properties.HandleVisibility = 'off';
    info.properties.Serializable = 'off';
    info.icon = 'tool_data_brush.png';
    info.properties.CData = localLoadIconCData(info.icon);
    info.label = labelStrings.getString('Label_Exploration_Brushing');
    info.readyForGUIDE = false;
    uidata{end+1} = info;
    
    % Linked plots
    info = [];
    info.name = 'Linking';
    info.group = 'DataManager';
    info.constructor = 'uitoggletool';
    info.properties.oncallback = 'datamanager.linkbtnoncallback(''on'')';
    info.properties.offcallback = 'linkdata(gcbf,''off'')';
    info.properties.interruptible = 'off';
    info.properties.busyAction = 'queue';
    info.properties.ToolTipString = toolTipStrings.getString('TooltipString_DataManager_Linking');
    info.properties.Tag = [info.group,'.',info.name];
    info.properties.HandleVisibility = 'off';
    info.properties.Serializable = 'off';
    info.icon = 'tool_plot_linked.png';
    info.properties.CData = localLoadIconCData(info.icon);
    info.label = labelStrings.getString('Label_DataManager_Linking');
    info.readyForGUIDE = false;
    uidata{end+1} = info;
    
    % ANNOTATION TOOLS ------------------------------------------%
    
    % Colorbar
    info = [];
    info.name = 'InsertColorbar';
    info.group = 'Annotation';
    info.constructor = 'uitoggletool';
    info.properties.ClickedCallback = 'insertmenufcn(gcbf,''Colorbar'')';
    info.properties.ToolTipString = toolTipStrings.getString('TooltipString_Annotation_InsertColorbar');
    info.properties.Tag = [info.group,'.',info.name];
    info.properties.HandleVisibility = 'off';
    info.properties.Serializable = 'off';
    info.icon = 'tool_colorbar.png';
    info.properties.CData = localLoadIconCData(info.icon);
    info.label = labelStrings.getString('Label_Annotation_InsertColorbar');
    info.readyForGUIDE = true;
    uidata{end+1} = info;
    
    % Legend
    info = [];
    info.name = 'InsertLegend';
    info.group = 'Annotation';
    info.constructor = 'uitoggletool';
    info.properties.ClickedCallback = 'insertmenufcn(gcbf,''Legend'')';
    info.properties.ToolTipString = toolTipStrings.getString('TooltipString_Annotation_InsertLegend');
    info.properties.Tag = [info.group,'.',info.name];
    info.properties.HandleVisibility = 'off';
    info.properties.Serializable = 'off';
    info.icon = 'tool_legend.png';
    info.properties.CData = localLoadIconCData(info.icon);
    info.label = labelStrings.getString('Label_Annotation_InsertLegend');
    info.readyForGUIDE = true;
    uidata{end+1} = info;
    
    % Rectangle
    info = [];
    info.name = 'InsertRectangle';
    info.group = 'Annotation';
    info.constructor = 'uitoggletool';
    info.properties.OnCallback = 'startscribeobject(''Rectangle'', gcbf)';
    info.properties.OffCallback = 'startscribeobject(''None'', gcbf)';
    info.properties.ToolTipString = toolTipStrings.getString('TooltipString_Annotation_InsertRectangle');
    info.properties.Tag = [info.group,'.',info.name];
    info.properties.HandleVisibility = 'off';
    info.properties.Serializable = 'off';
    info.icon = 'tool_shape_rectangle.png';
    info.properties.CData = localLoadIconCData(info.icon);
    info.label = labelStrings.getString('Label_Annotation_InsertRectangle');
    info.readyForGUIDE = false;
    uidata{end+1} = info;
    
    % Ellipse
    info = [];
    info.name = 'InsertEllipse';
    info.group = 'Annotation';
    info.constructor = 'uitoggletool';
    info.properties.OnCallback = 'startscribeobject(''Ellipse'', gcbf)';
    info.properties.OffCallback = 'startscribeobject(''None'', gcbf)';
    info.properties.ToolTipString = toolTipStrings.getString('TooltipString_Annotation_InsertEllipse');
    info.properties.Tag = [info.group,'.',info.name];
    info.properties.HandleVisibility = 'off';
    info.properties.Serializable = 'off';
    info.icon = 'tool_shape_ellipse.png';
    info.properties.CData = localLoadIconCData(info.icon);
    info.label = labelStrings.getString('Label_Annotation_InsertEllipse');
    info.readyForGUIDE = false;
    uidata{end+1} = info;
    
    % Textbox
    info = [];
    info.name = 'InsertTextbox';
    info.group = 'Annotation';
    info.constructor = 'uitoggletool';
    info.properties.OnCallback = 'startscribeobject(''Textbox'', gcbf)';
    info.properties.OffCallback = 'startscribeobject(''None'', gcbf)';
    info.properties.ToolTipString = toolTipStrings.getString('TooltipString_Annotation_InsertTextbox');
    info.properties.Tag = [info.group,'.',info.name];
    info.properties.HandleVisibility = 'off';
    info.properties.Serializable = 'off';
    info.icon = 'tool_text_textbox.png';
    info.properties.CData = localLoadIconCData(info.icon);
    info.label = labelStrings.getString('Label_Annotation_InsertTextbox');
    info.readyForGUIDE = false;
    uidata{end+1} = info;
    
    % Text Arrow
    info = [];
    info.name = 'InsertTextArrow';
    info.group = 'Annotation';
    info.constructor = 'uitoggletool';
    info.properties.OnCallback = 'startscribeobject(''TextArrow'', gcbf)';
    info.properties.OffCallback = 'startscribeobject(''None'', gcbf)';
    info.properties.ToolTipString = toolTipStrings.getString('TooltipString_Annotation_InsertTextArrow');
    info.properties.Tag = [info.group,'.',info.name];
    info.properties.HandleVisibility = 'off';
    info.properties.Serializable = 'off';
    info.icon = 'tool_text_arrow.png';
    info.properties.CData = localLoadIconCData(info.icon);
    info.label = labelStrings.getString('Label_Annotation_InsertTextArrow');
    info.readyForGUIDE = false;
    uidata{end+1} = info;
    
    % 2 Headed Arrow
    info = [];
    info.name = 'InsertDoubleArrow';
    info.group = 'Annotation';
    info.constructor = 'uitoggletool';
    info.properties.OnCallback = 'startscribeobject(''DoubleArrow'', gcbf)';
    info.properties.OffCallback = 'startscribeobject(''None'', gcbf)';
    info.properties.ToolTipString = toolTipStrings.getString('TooltipString_Annotation_InsertDoubleArrow');
    info.properties.Tag = [info.group,'.',info.name];
    info.properties.HandleVisibility = 'off';
    info.properties.Serializable = 'off';
    info.icon = 'tool_arrow_dbl.png';
    info.properties.CData = localLoadIconCData(info.icon);
    info.label = labelStrings.getString('Label_Annotation_InsertDoubleArrow');
    info.readyForGUIDE = false;
    uidata{end+1} = info;
    
    % 1 Headed Arrow
    info = [];
    info.name = 'InsertArrow';
    info.group = 'Annotation';
    info.constructor = 'uitoggletool';
    info.properties.OnCallback = 'startscribeobject(''Arrow'', gcbf)';
    info.properties.OffCallback = 'startscribeobject(''None'', gcbf)';
    info.properties.ToolTipString = toolTipStrings.getString('TooltipString_Annotation_InsertArrow');
    info.properties.Tag = [info.group,'.',info.name];
    info.properties.HandleVisibility = 'off';
    info.properties.Serializable = 'off';
    info.icon = 'tool_arrow.png';
    info.properties.CData = localLoadIconCData(info.icon);
    info.label =labelStrings.getString('Label_Annotation_InsertArrow');
    info.readyForGUIDE = false;
    uidata{end+1} = info;
    
    % Line
    info = [];
    info.name = 'InsertLine';
    info.group = 'Annotation';
    info.constructor = 'uitoggletool';
    info.properties.OnCallback = 'startscribeobject(''Line'', gcbf)';
    info.properties.OffCallback = 'startscribeobject(''None'', gcbf)';
    info.properties.ToolTipString = toolTipStrings.getString('TooltipString_Annotation_InsertLine');
    info.properties.Tag = [info.group,'.',info.name];
    info.properties.HandleVisibility = 'off';
    info.properties.Serializable = 'off';
    info.icon = 'tool_line.png';
    info.properties.CData = localLoadIconCData(info.icon);
    info.label = labelStrings.getString('Label_Annotation_InsertLine');
    info.readyForGUIDE = false;
    uidata{end+1} = info;
    
    % Pin
    info = [];
    info.name = 'Pin';
    info.group = 'Annotation';
    info.constructor = 'uitoggletool';
    info.properties.OnCallback = 'startscribepinning(gcbf)';
    info.properties.OffCallback = 'startscribepinning(gcbf,''off'')';
    info.properties.ToolTipString = toolTipStrings.getString('TooltipString_Annotation_Pin');
    info.properties.Tag = [info.group,'.',info.name];
    info.properties.HandleVisibility = 'off';
    info.properties.Serializable = 'off';
    info.icon = 'tool_pushpin.png';
    info.properties.CData = localLoadIconCData(info.icon);
    info.label = labelStrings.getString('Label_Annotation_Pin');
    info.readyForGUIDE = false;
    uidata{end+1} = info;
    
    % Align Distribute
    info = [];
    info.name = 'AlignDistribute';
    info.group = 'Annotation';
    info.constructor = 'uitoggletool';
    info.properties.OnCallback = 'scribealign(gcbf)';
    info.properties.ToolTipString =  toolTipStrings.getString('TooltipString_Annotation_AlignDistribute');
    info.properties.Tag = [info.group,'.',info.name];
    info.properties.HandleVisibility = 'off';
    info.properties.Serializable = 'off';
    info.icon = 'tool_align_center.png';
    info.properties.CData = localLoadIconCData(info.icon);
    info.label = labelStrings.getString('Label_Annotation_AlignDistribute');
    info.readyForGUIDE = false;
    uidata{end+1} = info;
    
    
    % PLOTTOOL-RELATED TOOLS ------------------------------------------%
    
    % Plottools Off
    info = [];
    info.name = 'PlottoolsOff';
    info.group = 'Plottools';
    info.constructor = 'uipushtool';
    info.properties.ClickedCallback = 'plottools (gcbf, ''hide'');';
    info.properties.ToolTipString = toolTipStrings.getString('TooltipString_Plottools_PlottoolsOff');
    info.properties.Enable = 'off';
    info.properties.RequireJavaFigures = 'on';
    info.properties.Tag = [info.group,'.',info.name];
    info.properties.HandleVisibility = 'off';
    info.properties.Serializable = 'off';
    info.icon = 'tool_plottools_hide.png';
    info.properties.CData = localLoadIconCData(info.icon);
    info.label = labelStrings.getString('Label_Plottools_PlottoolsOff');
    info.readyForGUIDE = false;
    uidata{end+1} = info;
    
    % Plottools On
    info = [];
    info.name = 'PlottoolsOn';
    info.group = 'Plottools';
    info.constructor = 'uipushtool';
    info.properties.ClickedCallback = 'plottools (gcbf, ''show'');';
    info.properties.ToolTipString = toolTipStrings.getString('TooltipString_Plottools_PlottoolsOn');
    info.properties.Enable = 'on';
    info.properties.RequireJavaFigures = 'on';
    info.properties.Tag = [info.group,'.',info.name];
    info.properties.HandleVisibility = 'off';
    info.properties.Serializable = 'off';
    info.icon = 'tool_plottools_show.png';
    info.properties.CData = localLoadIconCData(info.icon);
    info.label = labelStrings.getString('Label_Plottools_PlottoolsOn');
    info.readyForGUIDE = false;
    uidata{end+1} = info;
    
    %%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%  END DEFINING DATA  %%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%
end
toolbarData = uidata;

function cdata = localLoadIconCData(filename)
% Loads CData from the icon files (PNG, GIF or MAT) in toolbox/matlab/icons.
% filename = info.icon;

% Load cdata from *.gif file
persistent ICONROOT
if isempty(ICONROOT)
    ICONROOT = fullfile(toolboxdir('matlab'),'icons',filesep);
end

if length(filename)>3 && strncmp(filename(end-3:end),'.gif',4)
    [cdata,map] = imread([ICONROOT,filename]);
    % Set all white (1,1,1) colors to be transparent (nan)
    ind = map(:,1)+map(:,2)+map(:,3)==3;
    map(ind) = NaN;
    cdata = ind2rgb(cdata,map);
    
    % Load cdata from *.png file
elseif length(filename)>3 && strncmp(filename(end-3:end),'.png',4)
    [cdata, map, alpha] = imread([ICONROOT,filename],'Background','none');
    % Converting 16-bit integer colors to MATLAB colorspec
    cdata = double(cdata) / 65535.0;
    % Set all transparent pixels to be transparent (nan)
    cdata(alpha==0) = NaN;
    
    % Load cdata from *.mat file
else
    temp = load([ICONROOT,filename],'cdata');
    cdata = temp.cdata;
end
