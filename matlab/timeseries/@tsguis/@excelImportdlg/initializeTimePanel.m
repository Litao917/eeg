function initializeTimePanel(h)
% INITIALIZETIMEPANEL initializes the 'Define Time Vector' panel

% Author: Rong Chen 
%  Copyright 1986-2011 The MathWorks, Inc.

% -------------------------------------------------------------------------
%% Build time panel
% -------------------------------------------------------------------------
h.DefaultPos.TimePanelDefaultColor=h.DefaultPos.FigureDefaultColor;
if isfield(h.Handles,'PNLtime') && ishghandle(h.Handles.PNLtime)
    delete(h.Handles.PNLtime);
end
strSpecifyTimeVector = getString(message('MATLAB:tsguis:excelImportdlg:initializeTimePanel:SpecifyTimeVector'));
h.Handles.PNLtime = uipanel('Parent',h.Figure,...
    'Units','Pixels',...
    'FontSize',9,...
    'FontWeight','bold', ...
    'BackgroundColor',h.DefaultPos.TimePanelDefaultColor,...
    'Title',sprintf(' %s ', strSpecifyTimeVector),...
    'Position',[h.DefaultPos.leftoffsetpnl ...
                h.DefaultPos.bottomoffsetTimepnl ...
                h.DefaultPos.widthpnl ...
                h.DefaultPos.heightTimepnl], ...
    'Visible','off'...
);

% create sheet combobox controls whose values are based on the rawdata
huicTXTtimeSheet = uicontextmenu('Parent',h.Figure);
strTimevectorSource = getString(message('MATLAB:tsguis:excelImportdlg:initializeTimePanel:TimevectorSource'));
h.Handles.TXTtimeSheet = uicontrol('Parent',h.Handles.PNLtime,...
    'style','text', ...
    'Units','Pixels',...
    'BackgroundColor',h.DefaultPos.TimePanelDefaultColor,...
    'String',sprintf('%s : ',strTimevectorSource),...
    'HorizontalAlignment','Left', ...
    'UIContextMenu',huicTXTtimeSheet,...
    'Position',[h.DefaultPos.TXTtimeSheetleftoffset ...
                h.DefaultPos.TXTtimeSheetbottomoffset ...
                h.DefaultPos.TXTtimeSheetwidth ...
                h.DefaultPos.heighttxt] ...
    );
uimenu(huicTXTtimeSheet,'Label',getString(message('MATLAB:tsguis:excelImportdlg:initializeTimePanel:WhatsThisLabel')),'Callback','tsDispatchHelp(''its_wiz_time_src_for_xls'',''modal'')')

h.Handles.COMBtimeSource = uicontrol('Parent',h.Handles.PNLtime,...
    'style','popupmenu',...
    'Units', 'Pixels',...
    'BackgroundColor',[1 1 1], ...
    'String',[{getString(message('MATLAB:tsguis:excelImportdlg:initializeTimePanel:CurrentSpreadsheet'))},{getString(message('MATLAB:tsguis:excelImportdlg:initializeTimePanel:DefineItNow'))},{getString(message('MATLAB:tsguis:excelImportdlg:initializeTimePanel:MATLABWorkspace'))}], ...
    'Value',1,...
    'TooltipString',getString(message('MATLAB:tsguis:excelImportdlg:initializeTimePanel:TimeVectorNotObtained')),...
    'Position',[h.DefaultPos.COMBtimeSheetleftoffset ...
                h.DefaultPos.TXTtimeSheetbottomoffset+4 ...
                h.DefaultPos.COMBtimeSheetwidth ...
                h.DefaultPos.heightcomb], ...
    'Callback',{@localSwitchSource h}, ...
    'Tag', 'COMBtimeSource');

% create dynamic panels
h.dynamicPanel_CurrentSheet;
h.dynamicPanel_ManualInput;
h.dynamicPanel_Workspace;
if  ~isempty(h.Handles.tsTable)
    % no time or number detected in either the first row or column
    % set column as default and bring up the manual input
    set(h.Handles.COMBdataSample,'Value',1);
    h.TimePanelUpdate('column');
end


% -------------------------------------------------------------------------
%% time vector source selection callbacks
% -------------------------------------------------------------------------
function localSwitchSource(eventSrc, eventData, h)
% callback for the sheet combobox in the time panel
ind = get(eventSrc,'Value');
if ind==3
    % from workspace
    set(h.Handles.PNLtimeCurrentSheet,'Visible','off');
    set(h.Handles.PNLtimeManual,'Visible','off');
    set(h.Handles.PNLtimeWorkspace,'Visible','on');
elseif ind==2
    % manual input
    set(h.Handles.PNLtimeCurrentSheet,'Visible','off');
    set(h.Handles.PNLtimeManual,'Visible','on');
    set(h.Handles.PNLtimeWorkspace,'Visible','off');
elseif ind==1
    % currentsheet
    set(h.Handles.PNLtimeCurrentSheet,'Visible','on');
    set(h.Handles.PNLtimeManual,'Visible','off');
    set(h.Handles.PNLtimeWorkspace,'Visible','off');
end


